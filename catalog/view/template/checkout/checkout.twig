{{ header }}
<div id="checkout-checkout" class="container">
  <ul class="breadcrumb">
    {% for breadcrumb in breadcrumbs %}
      <li class="breadcrumb-item"><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
    {% endfor %}
  </ul>
  <div class="row">{{ column_left }}
    <div id="content" class="col">{{ content_top }}
      <h1>{{ heading_title }}</h1>
      <form id="checkout-form">
        <div class="mb-3">
          <label for="input-firstname" class="form-label">{{ label_firstname }}</label>
          <input type="text" id="input-firstname" name="firstname" class="form-control" required>
        </div>
        <div class="mb-3">
          <label for="input-lastname" class="form-label">{{ label_lastname }}</label>
          <input type="text" id="input-lastname" name="lastname" class="form-control" required>
        </div>
        <div class="mb-3">
          <label for="input-telephone" class="form-label">{{ label_telephone }}</label>
          <input type="text" id="input-telephone" name="telephone" class="form-control" required>
        </div>
        {% if shipping_methods %}
          <h3>Оберіть службу доставки</h3>
          <div id="shipping-method">
            {% for shipping in shipping_methods %}
              <h4>{{ shipping.name }}</h4>
              <ul class="list-unstyled">
                {% for quote in shipping.quote %}
                  <li>
                    <label>
                      <input type="radio" name="shipping_method" value="{{ quote|json_encode|escape }}" data-code="{{ quote.code }}">
                      {{ quote.name }}
                    </label>
                    {% if quote.code == 'nova_poshta.nova_poshta' %}
                      {% include 'extension/opencart/catalog/view/template/shipping/nova_poshta_fields.twig' %}
                    {% elseif quote.code == 'ukr_poshta.ukr_poshta' %}
                      {% include 'extension/opencart/catalog/view/template/shipping/ukr_poshta_fields.twig' %}
                    {% endif %}
                  </li>
                {% endfor %}
              </ul>
            {% endfor %}
          </div>
        {% else %}
          <p>Доставка недоступна.</p>
        {% endif %}
        <h3>Оберіть спосіб оплати</h3>
        <ul class="list-unstyled">
          <li>
            <label>
              <input type="radio" name="payment_method" value='{{ {"code":"cod.cod", "name":"Післяплата"}|json_encode() }}'>
              Післяплата
            </label>
          </li>
          <li>
            <label>
              <input type="radio" name="payment_method" value='{{ {"code":"bank_card.bank_card", "name":"Оплата карткою"}|json_encode() }}'>
              Оплата карткою
            </label>
          </li>
        </ul>
        <div class="mb-3">
          <label for="input-comment" class="form-label">{{ label_comment }}</label>
          <textarea name="comment" rows="4" id="input-comment" class="form-control"></textarea>
        </div>
        <button type="button" id="button-confirm" class="btn btn-primary">{{ button_confirm }}</button>
      </form>

      <div id="order-message"></div>

      <script>
        function highlightTerm(fullString, term) {
          let safeTerm = term.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
          let regex = new RegExp(safeTerm, 'gi');
          return fullString.replace(regex, (match) => `<strong>${match}</strong>`);
        }

        function setupAutocomplete(inputEl, suggestionsEl, options) {
          // options.fetchUrl = (term) => 'url';
          // options.minLength = 3;
          // options.onSelect = (item) => {}

          let timeout = null;

          inputEl.addEventListener('input', function() {
            const term = this.value.trim();

            if (term.length < (options.minLength || 1)) {
              suggestionsEl.style.display = 'none';
              suggestionsEl.innerHTML = '';
              return;
            }

            clearTimeout(timeout);

            timeout = setTimeout(() => {
              const url = options.fetchUrl(term);
              fetch(url)
                      .then(r => r.json())
                      .then(data => {
                        suggestionsEl.innerHTML = '';
                        if (data.length) {
                          suggestionsEl.style.display = 'block';

                          data.forEach(item => {
                            const div = document.createElement('div');
                            div.innerHTML = highlightTerm(item.value, term);

                            div.addEventListener('click', function() {
                              inputEl.value = item.value;
                              if (options.onSelect) {
                                options.onSelect(item);
                              }
                              suggestionsEl.style.display = 'none';
                              suggestionsEl.innerHTML = '';
                            });

                            suggestionsEl.appendChild(div);
                          });
                        } else {
                          suggestionsEl.style.display = 'none';
                        }
                      })
                      .catch(err => {
                        console.error('Autocomplete fetch error:', err);
                        suggestionsEl.style.display = 'none';
                        suggestionsEl.innerHTML = '';
                      });
            }, 300);
          });

          document.addEventListener('click', function(e) {
            if (!suggestionsEl.contains(e.target) && e.target !== inputEl) {
              suggestionsEl.style.display = 'none';
              suggestionsEl.innerHTML = '';
            }
          });
        }
        
        document.getElementById('button-confirm').addEventListener('click', async function() {
          let button = this;
          let buttonText = button.innerHTML;
          let buttonWidth = button.offsetWidth;

          button.innerHTML = '<i class="fa-solid fa-circle-notch fa-spin text-light"></i>';
          button.style.width = buttonWidth + 'px';
          button.disabled = true;

          let formData = new FormData(document.getElementById('checkout-form'));

          try {
            let response = await fetch('index.php?route=checkout/confirm.simpleCheckout&language={{ language }}', {
              method: 'POST',
              body: formData
            });

            let json = await response.json();
            console.log(json);

            if (json.success) {
              window.location.href = 'index.php?route=checkout/success&language={{ language }}';
            } else {
              document.getElementById('order-message').innerHTML = '<div class="alert alert-danger">' + json.error + '</div>';
            }
          } catch (error) {
            console.error('Помилка:', error);
            document.getElementById('order-message').innerHTML = '<div class="alert alert-danger">{{ error_server }}</div>';
          }

          button.innerHTML = buttonText;
          button.style.width = '';
          button.disabled = false;
        });
      </script>

      {#<div id="checkout-confirm">{{ confirm }}</div>#}

    </div>
    {{ content_bottom }}
  </div>
  {{ column_right }}
</div>
{{ footer }}
